import Head from 'next/head'
import Image from 'next/image'
import { Button, TextInput } from '@mantine/core';
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import { useState } from 'react';
import Navbar from './components/Navbar';
import {HiOutlineSaveAs} from 'react-icons/hi'
import {FcLikePlaceholder} from 'react-icons/fc'
import {AiOutlineDislike} from 'react-icons/ai'
import RatingModal from './components/Rating';
import { useDB } from '@/context/DBContext';
import { useAuth } from '@/context/AuthContext';
import { FirebaseError } from 'firebase/app';
import { increment } from 'firebase/firestore';

const inter = Inter({ subsets: ['latin'] })

export default function Home() {

  const [walkImage, setWalkImage] = useState('')
  const [imageSearch, setImageSearch] = useState('')
  const [imageTitle, setImageTitle] = useState('')
  const [imageCredits, setImageCredits] = useState('')
  const [imageUID, setImageUID] = useState('')
  const [imgLikes, setImgLikes] = useState(0)
  const [isLikeActive, setIsLikeActive] = useState(false)
  const { addToDB, handleDBUpdate, handleDBRead } = useDB()
  const { user } = useAuth()

  // Grab Image API Link from Search Query
  const grabArtLink = async () => {
    console.log('Grabbing api link...')
    try {
      const response = await fetch('/api/grabImageLink', {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify( {query: imageSearch})
      });
  
      const data = await response.json();
      
      // Validate API call was succesfully made.
      if (response.status !== 200) {
        throw data.error || new Error(`Request failed with status ${response.status}`)
      }
  
       grabArtDisplay(data.result)
  
        } catch (error) {
  
          // Additional error handling beyond unsucessful api call
          
        }
  };

  // Grab Actual Image Based on Query
  const grabArtDisplay = async (api_link) => {
    console.log('Grabbing display...')
    try {
      const response = await fetch('/api/grabImageDisplay', {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify( {link: api_link})
      });
      const data = await response.json();
      
      // Validate API call was succesfully made.
      if (response.status !== 200) {
        throw data.error || new Error(`Request failed with status ${response.status}`)
      }
  
        console.log(data)
        setWalkImage(data.result)
        setImageTitle(data.title)
        setImageCredits(data.credits)
        setImageUID(data.uid)
  
        } catch (error) {
  
          // Additional error handling beyond unsucessful api call
          
        }
  };

  const handleImageAction = async (actionId: number) => {
    switch (actionId) {
      case 0: 
        console.log("saving... " + imageUID)
        break;
      case 1:
        console.log("liking... " + imageUID)
        await handleDBUpdate("works", imageUID, {
          likes: increment(1)
        })
        break;
      case 2:
        console.log("disliking... " + imageUID)
        await handleDBUpdate("works", imageUID, {
          dislikes: increment(1)
        })
        break;
      default:
          console.log("Invalid image action...")
    }
  }

  const changeActivityState = async (active: boolean) => {

    console.log(active)
    if(!active) {
    const { payload } = await handleDBRead("works", imageUID)
        setImgLikes(payload.likes)
        console.log(payload.likes)
        setIsLikeActive(true)
    }
    else {
      setIsLikeActive(false)
    }
  }

  return (
    <>
      <Head>
        <title>Art Walk</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.welcomeBackNav}>
      <Navbar/>
      </div>
      <main className={styles.main}>
        <div className={styles.imageWalkBox}>
        <div className={styles.centralImageBox}>
      {walkImage && 
      <>
      
      <Image 
       width={500}
       height={500} 
       src={walkImage} 
       alt="n/a"     
       >  
       </Image> 
      <div className={styles.headers}>
        {imageTitle && <h1>{imageTitle}</h1>}
        {imageCredits && <h2>{imageCredits}</h2>}   
        <div className={styles.imageActionStyles}>
          <RatingModal children={
         <>
         <div className={styles.actionAndInfo}>
         <HiOutlineSaveAs onClick={ async () => {
           handleImageAction(0)
         }} size={40}/>
         </div>
         <div className={styles.actionAndInfo}>
         <FcLikePlaceholder onClick={ async () => {
           handleImageAction(1)
         }} size={40}/>
         { isLikeActive ? (
           <>
           <h2>{imgLikes}</h2>
         <Button
          onClick={ async () => changeActivityState(isLikeActive)}>
            Reveal
         </Button>
         </>
         ) : (
           <>
           <Button
          onClick={ async () => changeActivityState(isLikeActive)}>
            Reveal
         </Button>
          </>
          )}
         </div>
         <div className={styles.actionAndInfo}>
         <AiOutlineDislike onClick={ async () => {
           handleImageAction(2)
         }}size={40}/>
         </div>
         </>
        }
        />
        </div>
        </div>
      </>
}
</div>
</div>
       <div className={styles.userField}>
        <TextInput
        placeholder="Example: Cats"
        label="What are you looking for?"
        description="(Enter an attribute of a piece you'd like to see)"
        withAsterisk
        value={imageSearch}
        onChange={(event) => setImageSearch(event.currentTarget.value)}
    />
        <Button
        color="teal"
        onClick={grabArtLink}
        className={styles.walkButton}
        >
          Walk
        </Button>
        </div>
          
        <div className={styles.grid}>

         
        </div>
      </main>
    </>
  )
}
